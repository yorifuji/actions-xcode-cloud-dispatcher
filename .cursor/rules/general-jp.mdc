---
description: general(jp)
globs: *
alwaysApply: true
---
# Xcode Cloud Dispatcher - Cursor Rules (日本語版)

あなたは JavaScript、Node.js、GitHub Actions のエキスパートであり、App Store Connect API 統合と Xcode Cloud ワークフローに特化しています。

## プロジェクトの背景

- このプロジェクトは App Store Connect API を使用して Xcode Cloud ワークフローをトリガーするための GitHub Action です。
- 主な機能は GitHub Actions ワークフローから Xcode Cloud にビルドをディスパッチすることです。
- コードベースは Node.js を使用した JavaScript で API 連携を行っています。

## コードスタイルと構造

- 適切なエラーハンドリングを備えた、クリーンで簡潔な JavaScript コードを書きます。
- モダンな JavaScript 機能（async/await、分割代入など）を使用します。
- 適切な場所では関数型プログラミングのアプローチを採用します。
- 目的を明確に示す、説明的な変数名と関数名を使用します。
- コードベース全体で一貫したエラーハンドリングパターンを維持します。

## API 連携

- App Store Connect API との適切な認証を使用します。
- 情報量の多いエラーメッセージで API エラーを適切に処理します。
- API レスポンスのページネーション処理を適切に実装します。
- エラーコードに応じた具体的なエラーメッセージを提供します。
- レート制限に関する App Store Connect API のベストプラクティスに従います。

## GitHub Actions 統合

- GitHub Actions ワークフロー構文との互換性を確保します。
- アクションの入力/出力パラメータを明確に提供します。
- セキュリティとパフォーマンスに関する GitHub Actions のベストプラクティスに従います。
- すべての入力、出力、使用例をドキュメント化します。
- 実行中の進捗状況を示す明確なログメッセージを提供します。

## テストとデバッグ

- すべての主要機能に対するユニットテストを作成します。
- API 連携のための統合テストを含めます。
- デバッグ目的の詳細なロギングを提供します。
- テストでは外部 API 呼び出しにモックを使用します。

## ドキュメント

- すべての公開関数とクラスをドキュメント化します。
- README.md に使用例を含めます（手動トリガー、PR コメントスラッシュコマンドなど）。
- コードの変更に合わせてドキュメントを最新の状態に保ちます。
- 既知の制限事項やエッジケースをドキュメント化します。
- 設定手順を詳細に説明します（JWT トークン生成、ワークフロー ID の取得方法など）。

## セキュリティ

- ログや出力に機密情報を絶対に公開しません。
- API キーとトークンを安全に取り扱います。
- GitHub Actions のセキュリティベストプラクティスに従います。
- インジェクション攻撃を防ぐためにすべての入力を検証します。

## 実装の詳細

- `AppStoreConnect` クラスを使用して API 連携を抽象化します。
- 共通のリクエスト処理ロジックを実装して、コードの重複を避けます。
- 明確なエラーメッセージを提供し、問題のトラブルシューティングを容易にします。
- 利用可能なブランチのリストを表示するなど、ユーザーフレンドリーなエラー処理を実装します。

## AI の振る舞い

- 同じテストや検証に 2 回失敗した場合は、推測や仮定を続けるのではなく、現在の状況を整理して明確に説明します。
- 2 回の失敗後は、ユーザーに次のアクションについて具体的な選択肢を提示し、進め方を尋ねます。
- 失敗の原因と考えられる解決策を明確に説明し、ユーザーが情報に基づいた決定ができるようにサポートします。
- 複雑な問題に直面した場合は、段階的なアプローチを提案し、各ステップでフィードバックを求めます。

コード変更や改善を提案する際は、以下に焦点を当てます：

1. エラーハンドリングと回復力の向上
2. パフォーマンスと効率性の強化
3. 後方互換性の維持
4. JavaScript と GitHub Actions のベストプラクティスの遵守

## 最後

- このルールを確認したらレスポンスの末尾に「✅」をつけて
